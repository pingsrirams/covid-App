{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19-white-logo.png"],"names":["useStyles","makeStyles","red","background","border","borderRadius","boxShadow","color","height","padding","blue","green","Cards","data","confirmed","recovered","deaths","lastUpdate","classes","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","CardContent","Typography","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountry","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaLogo","image","alt","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.22df8c12.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Cards.module.css';\n\nimport CountUp from \"react-countup\";\n\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    red: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        color: 'white',\n        height: \"auto\",\n        padding: '0 30px',\n    },\n    blue: {\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        color: 'white',\n        height: \"auto\",\n        padding: '0 30px',\n    },\n    green: {\n        background: 'linear-gradient(45deg, #b993d6 30%, #8ca6db 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        color: 'white',\n        height: \"auto\",\n        padding: '0 30px',\n    }\n});\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\n\n    const classes = useStyles();\n\n    if(!confirmed){\n        return 'Loading...';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={classes.red}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={classes.blue}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of recovered cases from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={classes.green}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of death caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const fetchCountry = async () => {\n    try {\n        const { data: { countries }} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch(error) {\n        console.log(error);\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n\n             setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n        ? (<Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#4DD0E1',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: '#E91E63',\n                    backgroundColor: 'rgba(233, 30, 99, 0.5)',\n                    fill: true,\n                }]\n            }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor:\n                                [\n                                'rgba(255, 105, 135)',\n                                'rgba(33, 203, 243)',\n                                'rgba(185, 147, 214)',\n                                ],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text: `Current state in ${country}` },\n                    }}\n                />\n            ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            { country ? barChart : lineChart }\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountry } from \"../../api\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styles from './CountryPicker.module.css';\n\nconst useStyles = makeStyles({\n    red: {\n        color: 'white'\n    }\n});\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const classes = useStyles();\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountry());\n        }\n        fetchAPI();\n    },[setFetchedCountries]);\n\n    console.log(fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\" className={classes.red}>Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React, { Component } from \"react\";\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from \"./api\";\n\nimport coronaLogo from './images/covid19-white-logo.png';\n\nclass App extends Component{\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        console.log(fetchedData);\n\n        this.setState({ data: fetchedData, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n        return(\n            <div className={styles.container}>\n                <img src={coronaLogo} className={styles.image} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MuiGrid-spacing-xs-3\":\"Cards_MuiGrid-spacing-xs-3__rPscV\",\"MuiGrid-item\":\"Cards_MuiGrid-item__1PoS3\",\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covid19-white-logo.ecb55167.png\";"],"sourceRoot":""}